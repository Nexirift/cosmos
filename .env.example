# Database Configuration
# Format: postgresql://username:password@host:port/database_name
DATABASE_URL=postgresql://postgres:postgres@localhost:5432/nexirift

# Authentication Configuration
# Secret key used for signing and encrypting tokens (MUST be strong and at least 32 chars)
BETTER_AUTH_SECRET=change_me_to_a_secure_random_string_at_least_32_chars
# Base URL of the authentication server (used for callbacks and redirects)
BETTER_AUTH_URL=http://localhost:3000
# Whether to allow registration via OAuth providers (true/false)
ALLOW_OAUTH_REGISTRATION=false
# Whether to disable the initial setup wizard (true/false)
DISABLE_SETUP=false

# Invitation System
# Whether to disable the invitation system (true = anyone can register, false = invite only)
INVITATION_DISABLED=false
# Special code to bypass invitation requirement (leave empty to disable)
INVITATION_BYPASS_CODE=

# Email Verification
# Whether to require email verification before login (true/false)
REQUIRE_EMAIL_VERIFICATION=true
# URL to redirect users to after email verification
EMAIL_VERIFICATION_CALLBACK_URL=/dashboard

# Redis Configuration (for caching and session storage)
REDIS_HOST=localhost
REDIS_PORT=6379
REDIS_USERNAME=
REDIS_PASSWORD=

# SMTP Configuration for Email
# For development, you can use Ethereal (https://ethereal.email) or MailHog
SMTP_HOST=localhost
SMTP_PORT=1025  # MailHog default port
SMTP_AUTH_USER=
SMTP_AUTH_PASS=
# Email address that will appear in the From field
SMTP_FROM=noreply@example.com

# Email address for support inquiries
SUPPORT_EMAIL=support@example.com

# Client Configuration
# Base URL accessible from the browser (might be different in production)
NEXT_PUBLIC_AUTH_BASE_URL=http://localhost:3000

# S3 Storage Configuration (for file uploads, profile pictures, etc.)
# Bucket name in S3 or compatible service
S3_STORAGE_BUCKET=cosmos-uploads
# AWS region (e.g., us-east-1) or region of compatible service
S3_STORAGE_REGION=us-east-1
# S3 endpoint URL (for S3-compatible services like MinIO, leave empty for AWS)
S3_STORAGE_ENDPOINT=
# Access credentials for S3
S3_STORAGE_ACCESS_KEY_ID=
S3_STORAGE_SECRET_ACCESS_KEY=
# Whether to use path style URLs (true for many S3-compatible services)
S3_STORAGE_FORCE_PATH_STYLE=true

# OAuth Provider Configuration
# To enable any provider, set both the client ID and client secret

# Google OAuth (https://console.developers.google.com/)
# Redirect URI: http://localhost:3000/api/auth/oauth/callback/google
AUTH_PROVIDER_GOOGLE_CLIENT_ID=
AUTH_PROVIDER_GOOGLE_CLIENT_SECRET=

# GitHub OAuth (https://github.com/settings/developers)
# Redirect URI: http://localhost:3000/api/auth/oauth/callback/github
AUTH_PROVIDER_GITHUB_CLIENT_ID=
AUTH_PROVIDER_GITHUB_CLIENT_SECRET=

# Twitter OAuth (https://developer.twitter.com/en/portal/dashboard)
# Redirect URI: http://localhost:3000/api/auth/oauth/callback/twitter
AUTH_PROVIDER_TWITTER_CLIENT_ID=
AUTH_PROVIDER_TWITTER_CLIENT_SECRET=

# Twitch OAuth (https://dev.twitch.tv/console/apps)
# Redirect URI: http://localhost:3000/api/auth/oauth/callback/twitch
AUTH_PROVIDER_TWITCH_CLIENT_ID=
AUTH_PROVIDER_TWITCH_CLIENT_SECRET=

# GitLab OAuth (https://gitlab.com/-/profile/applications)
# Redirect URI: http://localhost:3000/api/auth/oauth/callback/gitlab
AUTH_PROVIDER_GITLAB_CLIENT_ID=
AUTH_PROVIDER_GITLAB_CLIENT_SECRET=
# Custom GitLab instance URL, leave empty for gitlab.com
AUTH_PROVIDER_GITLAB_ISSUER=

# Discord OAuth (https://discord.com/developers/applications)
# Redirect URI: http://localhost:3000/api/auth/oauth/callback/discord
AUTH_PROVIDER_DISCORD_CLIENT_ID=
AUTH_PROVIDER_DISCORD_CLIENT_SECRET=
